#!/usr/bin/env python3
"""
–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Instagram –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã —Ä–∞–±–æ—á–∏–µ, –∞ –∫–∞–∫–∏–µ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã
"""

import sys
import os
import json
import time
from datetime import datetime

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import init_db, get_instagram_accounts
from instagram.client import get_instagram_client

def test_account_connection(account):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {account.username} (ID: {account.id})")
    
    result = {
        'id': account.id,
        'username': account.username,
        'email': getattr(account, 'email', 'N/A'),
        'is_active': account.is_active,
        'status': 'unknown',
        'error': None,
        'profile_info': None,
        'test_time': datetime.now().isoformat()
    }
    
    try:
        print("   üì° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Instagram...")
        client = get_instagram_client(account.id)
        
        if client is None:
            result['status'] = 'no_client'
            result['error'] = '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Instagram'
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç")
            return result
        
        print("   ‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print("   üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ...")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ
        profile_info = client.account_info()
        
        if profile_info:
            result['status'] = 'working'
            result['profile_info'] = {
                'username': profile_info.username,
                'full_name': getattr(profile_info, 'full_name', ''),
                'biography': getattr(profile_info, 'biography', ''),
                'follower_count': getattr(profile_info, 'follower_count', 0),
                'following_count': getattr(profile_info, 'following_count', 0),
                'media_count': getattr(profile_info, 'media_count', 0),
                'is_private': getattr(profile_info, 'is_private', False),
                'is_verified': getattr(profile_info, 'is_verified', False)
            }
            print(f"   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢! –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {result['profile_info']['follower_count']}")
        else:
            result['status'] = 'no_profile_info'
            result['error'] = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ'
            print("   ‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        error_str = str(e)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        if 'challenge' in error_str.lower():
            result['status'] = 'challenge_required'
            result['error'] = '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ challenge'
            print("   üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ challenge")
        elif 'login' in error_str.lower():
            result['status'] = 'login_failed'
            result['error'] = '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç'
            print("   ‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞")
        elif 'banned' in error_str.lower() or 'suspended' in error_str.lower():
            result['status'] = 'banned'
            result['error'] = '–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'
            print("   üö´ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        else:
            result['status'] = 'error'
            result['error'] = error_str
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {error_str[:100]}...")
    
    return result

def save_validation_report(results):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
    report_file = f"account_validation_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    
    report_data = {
        'validation_time': datetime.now().isoformat(),
        'total_accounts': len(results),
        'summary': {
            'working': len([r for r in results if r['status'] == 'working']),
            'challenge_required': len([r for r in results if r['status'] == 'challenge_required']),
            'login_failed': len([r for r in results if r['status'] == 'login_failed']),
            'banned': len([r for r in results if r['status'] == 'banned']),
            'errors': len([r for r in results if r['status'] == 'error']),
            'other': len([r for r in results if r['status'] not in ['working', 'challenge_required', 'login_failed', 'banned', 'error']])
        },
        'accounts': results
    }
    
    try:
        with open(report_file, 'w', encoding='utf-8') as f:
            json.dump(report_data, f, ensure_ascii=False, indent=2)
        print(f"\nüíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {report_file}")
        return report_file
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def print_summary_report(results):
    """–í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    working = [r for r in results if r['status'] == 'working']
    challenge = [r for r in results if r['status'] == 'challenge_required']
    login_failed = [r for r in results if r['status'] == 'login_failed']
    banned = [r for r in results if r['status'] == 'banned']
    errors = [r for r in results if r['status'] == 'error']
    other = [r for r in results if r['status'] not in ['working', 'challenge_required', 'login_failed', 'banned', 'error']]
    
    print("\n" + "="*70)
    print("üìä –°–í–û–î–ù–´–ô –û–¢–ß–ï–¢ –ü–û –í–ê–õ–ò–î–ê–¶–ò–ò –ê–ö–ö–ê–£–ù–¢–û–í")
    print("="*70)
    
    print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(results)}")
    print()
    
    if working:
        print(f"‚úÖ –†–ê–ë–û–ß–ò–ï –ê–ö–ö–ê–£–ù–¢–´ ({len(working)}):")
        for acc in working:
            profile = acc.get('profile_info', {})
            followers = profile.get('follower_count', 'N/A')
            print(f"   ‚Ä¢ {acc['username']} (–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {followers})")
    
    if challenge:
        print(f"\nüîê –¢–†–ï–ë–£–Æ–¢ CHALLENGE ({len(challenge)}):")
        for acc in challenge:
            print(f"   ‚Ä¢ {acc['username']}")
    
    if login_failed:
        print(f"\n‚ùå –û–®–ò–ë–ö–ò –í–•–û–î–ê ({len(login_failed)}):")
        for acc in login_failed:
            print(f"   ‚Ä¢ {acc['username']}")
    
    if banned:
        print(f"\nüö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ï ({len(banned)}):")
        for acc in banned:
            print(f"   ‚Ä¢ {acc['username']}")
    
    if errors:
        print(f"\n‚ö†Ô∏è –î–†–£–ì–ò–ï –û–®–ò–ë–ö–ò ({len(errors)}):")
        for acc in errors:
            print(f"   ‚Ä¢ {acc['username']}: {acc['error'][:50]}...")
    
    if other:
        print(f"\n‚ùì –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–ô –°–¢–ê–¢–£–° ({len(other)}):")
        for acc in other:
            print(f"   ‚Ä¢ {acc['username']} ({acc['status']})")
    
    print("\n" + "="*70)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if working:
        print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {len(working)} —Ä–∞–±–æ—á–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        if challenge:
            print(f"üîê {len(challenge)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è challenge")
        if login_failed or banned or errors:
            problematic = len(login_failed) + len(banned) + len(errors)
            print(f"‚ö†Ô∏è {problematic} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–º–µ—é—Ç —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print("‚ùå –ù–ï–¢ –†–ê–ë–û–ß–ò–• –ê–ö–ö–ê–£–ù–¢–û–í!")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏")

def main():
    print("üîç –í–ê–õ–ò–î–ê–¶–ò–Ø –ê–ö–ö–ê–£–ù–¢–û–í INSTAGRAM")
    print("="*50)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å")
    print("="*50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    accounts = get_instagram_accounts()
    
    if not accounts:
        print("\n‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤!")
        print("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∞–∫–∫–∞—É–Ω—Ç—ã —á–µ—Ä–µ–∑ –±–æ—Ç–∞.")
        return
    
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {len(accounts)}")
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    confirm = input(f"\n–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É {len(accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤? (y/n): ").lower()
    if confirm != 'y':
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    print(f"\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é {len(accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    print("‚è±Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
    
    results = []
    
    for i, account in enumerate(accounts, 1):
        print(f"\n{'='*50}")
        print(f"üìç –ê–∫–∫–∞—É–Ω—Ç {i}/{len(accounts)}")
        
        result = test_account_connection(account)
        results.append(result)
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        if i < len(accounts):
            print("   ‚è≥ –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã...")
            time.sleep(2)
    
    # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
    print_summary_report(results)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    save_validation_report(results)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å —Ä–∞–±–æ—á–∏–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    working_accounts = [r for r in results if r['status'] == 'working']
    if working_accounts:
        working_file = f"working_accounts_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        try:
            with open(working_file, 'w', encoding='utf-8') as f:
                f.write("# –†–∞–±–æ—á–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã Instagram\n")
                f.write(f"# –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
                for acc in working_accounts:
                    profile = acc.get('profile_info', {})
                    followers = profile.get('follower_count', 0)
                    f.write(f"{acc['id']}:{acc['username']} (–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {followers})\n")
            print(f"üíæ –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {working_file}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ä–∞–±–æ—á–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {e}")

if __name__ == "__main__":
    main() 