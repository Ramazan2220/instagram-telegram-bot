"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Switch } from "@/components/ui/switch"
import { Slider } from "@/components/ui/slider"
import { StandardCard } from "@/components/ui/standard-card"
import { COMPACT_STYLES } from "@/components/global-optimization"
import {
  Wand2,
  Copy,
  RefreshCw,
  Save,
  Download,
  ImageIcon,
  Video,
  Hash,
  MessageSquare,
  Sparkles,
  Brain,
  Target,
  Zap,
} from "lucide-react"

export default function AIContentGenerator() {
  const [isGenerating, setIsGenerating] = useState(false)
  const [generatedContent, setGeneratedContent] = useState("")
  const [contentType, setContentType] = useState("post")
  const [tone, setTone] = useState("friendly")
  const [creativity, setCreativity] = useState([0.7])
  const [includeHashtags, setIncludeHashtags] = useState(true)
  const [includeEmojis, setIncludeEmojis] = useState(true)

  const [contentSettings, setContentSettings] = useState({
    topic: "",
    targetAudience: "",
    callToAction: "",
    brandVoice: "",
    keywords: "",
    length: "medium",
  })

  const contentTypes = [
    { value: "post", label: "–ü–æ—Å—Ç", icon: ImageIcon },
    { value: "story", label: "Stories", icon: Video },
    { value: "reel", label: "Reels", icon: Video },
    { value: "caption", label: "–ü–æ–¥–ø–∏—Å—å", icon: MessageSquare },
    { value: "comment", label: "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", icon: MessageSquare },
    { value: "bio", label: "–ë–∏–æ", icon: Hash },
  ]

  const tones = [
    { value: "friendly", label: "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", emoji: "üòä" },
    { value: "professional", label: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", emoji: "üíº" },
    { value: "casual", label: "–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π", emoji: "üòé" },
    { value: "inspiring", label: "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π", emoji: "‚ú®" },
    { value: "humorous", label: "–Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π", emoji: "üòÑ" },
    { value: "educational", label: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π", emoji: "üìö" },
    { value: "promotional", label: "–†–µ–∫–ª–∞–º–Ω—ã–π", emoji: "üéØ" },
    { value: "storytelling", label: "–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π", emoji: "üìñ" },
  ]

  const generateContent = async () => {
    setIsGenerating(true)

    // –°–∏–º—É–ª—è—Ü–∏—è AI –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await new Promise((resolve) => setTimeout(resolve, 2000))

    const sampleContent = `üåü –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞!

–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –ù–µ –≤–∞–∂–Ω–æ, —Å —á–µ–≥–æ –≤—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ, –≤–∞–∂–Ω–æ —Ç–æ, —á—Ç–æ –≤—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ. 

‚ú® –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —É—Å–ø–µ—Ö–∞:
‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
‚Ä¢ –ù–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π  
‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∫ –Ω–æ–≤–æ–º—É –æ–ø—ã—Ç—É
‚Ä¢ –†–∞–±–æ—Ç–∞ –Ω–∞–¥ —Å–æ–±–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å

–ö–∞–∫–æ–π —à–∞–≥ –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è? –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! üëá

#–º–æ—Ç–∏–≤–∞—Ü–∏—è #—É—Å–ø–µ—Ö #—Ä–∞–∑–≤–∏—Ç–∏–µ #—Ü–µ–ª–∏ #–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ #—Ä–æ—Å—Ç #–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è #–º–µ—á—Ç—ã`

    setGeneratedContent(sampleContent)
    setIsGenerating(false)
  }

  const copyToClipboard = () => {
    navigator.clipboard.writeText(generatedContent)
  }

  return (
    <div className={`w-full ${COMPACT_STYLES.sectionGap}`}>
      <StandardCard
        title={
          <div className="flex items-center gap-1">
            <Wand2 className={`${COMPACT_STYLES.smallIconSize} text-purple-400`} />
            –ò–ò –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
          </div>
        }
        description="–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"
      >
        <Tabs defaultValue="generator" className={`w-full ${COMPACT_STYLES.sectionGap}`}>
          <TabsList className="bg-slate-700 border-slate-600 h-7">
            <TabsTrigger
              value="generator"
              className={`data-[state=active]:bg-purple-600 ${COMPACT_STYLES.smallTextSize} h-5 px-2`}
            >
              <Brain className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
              –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä
            </TabsTrigger>
            <TabsTrigger
              value="templates"
              className={`data-[state=active]:bg-purple-600 ${COMPACT_STYLES.smallTextSize} h-5 px-2`}
            >
              <Sparkles className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
              –®–∞–±–ª–æ–Ω—ã
            </TabsTrigger>
            <TabsTrigger
              value="settings"
              className={`data-[state=active]:bg-purple-600 ${COMPACT_STYLES.smallTextSize} h-5 px-2`}
            >
              <Target className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </TabsTrigger>
          </TabsList>

          <TabsContent value="generator" className={`w-full ${COMPACT_STYLES.sectionGap} mt-3`}>
            <div className={`grid grid-cols-1 lg:grid-cols-2 ${COMPACT_STYLES.gridGap} w-full`}>
              {/* Input Section */}
              <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞</Label>
                  <Select value={contentType} onValueChange={setContentType}>
                    <SelectTrigger
                      className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                    >
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-slate-800 border-slate-700 text-white">
                      {contentTypes.map((type) => (
                        <SelectItem key={type.value} value={type.value} className={COMPACT_STYLES.smallTextSize}>
                          <div className="flex items-center gap-1">
                            <type.icon className={COMPACT_STYLES.smallIconSize} />
                            {type.label}
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–¢–µ–º–∞/–¢–æ–ø–∏–∫</Label>
                  <Input
                    placeholder="–û —á–µ–º –±—É–¥–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç?"
                    value={contentSettings.topic}
                    onChange={(e) => setContentSettings((prev) => ({ ...prev, topic: e.target.value }))}
                    className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                  />
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è</Label>
                  <Input
                    placeholder="–î–ª—è –∫–æ–≥–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç?"
                    value={contentSettings.targetAudience}
                    onChange={(e) => setContentSettings((prev) => ({ ...prev, targetAudience: e.target.value }))}
                    className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                  />
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–¢–æ–Ω –æ–±—â–µ–Ω–∏—è</Label>
                  <Select value={tone} onValueChange={setTone}>
                    <SelectTrigger
                      className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                    >
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent className="bg-slate-800 border-slate-700 text-white">
                      {tones.map((toneOption) => (
                        <SelectItem
                          key={toneOption.value}
                          value={toneOption.value}
                          className={COMPACT_STYLES.smallTextSize}
                        >
                          <div className="flex items-center gap-1">
                            <span>{toneOption.emoji}</span>
                            {toneOption.label}
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é</Label>
                  <Input
                    placeholder="–ß—Ç–æ –¥–æ–ª–∂–Ω–∞ —Å–¥–µ–ª–∞—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—è?"
                    value={contentSettings.callToAction}
                    onChange={(e) => setContentSettings((prev) => ({ ...prev, callToAction: e.target.value }))}
                    className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                  />
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</Label>
                  <Input
                    placeholder="–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é"
                    value={contentSettings.keywords}
                    onChange={(e) => setContentSettings((prev) => ({ ...prev, keywords: e.target.value }))}
                    className={`bg-slate-700 border-slate-600 text-white ${COMPACT_STYLES.inputHeight} ${COMPACT_STYLES.smallTextSize} w-full`}
                  />
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>
                    –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: {creativity[0]}
                  </Label>
                  <Slider
                    value={creativity}
                    onValueChange={setCreativity}
                    max={1}
                    min={0}
                    step={0.1}
                    className="w-full"
                  />
                  <div className="flex justify-between text-[9px] text-slate-400">
                    <span>–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ</span>
                    <span>–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ</span>
                  </div>
                </div>

                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <div className="flex items-center justify-between">
                    <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–í–∫–ª—é—á–∏—Ç—å —Ö–µ—à—Ç–µ–≥–∏</Label>
                    <Switch checked={includeHashtags} onCheckedChange={setIncludeHashtags} className="scale-75" />
                  </div>
                  <div className="flex items-center justify-between">
                    <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–í–∫–ª—é—á–∏—Ç—å —ç–º–æ–¥–∑–∏</Label>
                    <Switch checked={includeEmojis} onCheckedChange={setIncludeEmojis} className="scale-75" />
                  </div>
                </div>

                <Button
                  onClick={generateContent}
                  disabled={isGenerating}
                  className={`w-full bg-purple-600 hover:bg-purple-700 ${COMPACT_STYLES.buttonHeight} ${COMPACT_STYLES.smallTextSize}`}
                >
                  {isGenerating ? (
                    <>
                      <RefreshCw className={`${COMPACT_STYLES.smallIconSize} mr-1 animate-spin`} />
                      –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...
                    </>
                  ) : (
                    <>
                      <Zap className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
                      –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
                    </>
                  )}
                </Button>
              </div>

              {/* Output Section */}
              <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</Label>
                  <div className="relative w-full">
                    <Textarea
                      value={generatedContent}
                      onChange={(e) => setGeneratedContent(e.target.value)}
                      placeholder="–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç..."
                      className={`bg-slate-700 border-slate-600 text-white h-[200px] resize-none ${COMPACT_STYLES.smallTextSize} w-full`}
                    />
                    {generatedContent && (
                      <div className="absolute top-1 right-1 flex gap-0.5">
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={copyToClipboard}
                          className="text-slate-400 hover:text-white h-4 w-4 p-0"
                        >
                          <Copy className="h-2.5 w-2.5" />
                        </Button>
                        <Button variant="ghost" size="sm" className="text-slate-400 hover:text-white h-4 w-4 p-0">
                          <Save className="h-2.5 w-2.5" />
                        </Button>
                      </div>
                    )}
                  </div>
                </div>

                {generatedContent && (
                  <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                    <div className="flex justify-between text-[10px]">
                      <span className="text-slate-400">–°–∏–º–≤–æ–ª–æ–≤: {generatedContent.length}</span>
                      <span className="text-slate-400">–•–µ—à—Ç–µ–≥–æ–≤: {(generatedContent.match(/#\w+/g) || []).length}</span>
                    </div>

                    <div className="flex gap-1">
                      <Button
                        variant="outline"
                        className={`border-slate-600 text-slate-300 ${COMPACT_STYLES.buttonHeight} ${COMPACT_STYLES.smallTextSize}`}
                      >
                        <RefreshCw className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
                        –†–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                      </Button>
                      <Button
                        variant="outline"
                        className={`border-slate-600 text-slate-300 ${COMPACT_STYLES.buttonHeight} ${COMPACT_STYLES.smallTextSize}`}
                      >
                        <Download className={`${COMPACT_STYLES.smallIconSize} mr-1`} />
                        –≠–∫—Å–ø–æ—Ä—Ç
                      </Button>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </TabsContent>

          <TabsContent value="templates" className="w-full mt-3">
            {/* –®–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è */}
            <div className={`grid grid-cols-2 ${COMPACT_STYLES.gridGap} w-full`}>
              {[1, 2, 3, 4].map((i) => (
                <StandardCard key={i} title={`–®–∞–±–ª–æ–Ω ${i}`} description="–û–ø–∏—Å–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞">
                  <div className={`${COMPACT_STYLES.itemGap}`}>
                    <div className="p-1 bg-slate-800/50 rounded text-slate-300 text-[9px] font-mono h-12 overflow-hidden">
                      –ü—Ä–∏–º–µ—Ä —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...
                    </div>
                    <Button
                      variant="outline"
                      size="sm"
                      className={`w-full border-slate-600 text-slate-300 h-5 ${COMPACT_STYLES.smallTextSize}`}
                    >
                      <Copy className="h-2 w-2 mr-0.5" />
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                </StandardCard>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="settings" className="w-full mt-3">
            {/* –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
            <div className={`grid grid-cols-2 ${COMPACT_STYLES.gridGap} w-full`}>
              <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                <h3 className={`text-white font-medium ${COMPACT_STYLES.smallTextSize}`}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–µ–Ω–¥–∞</h3>
                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <Label className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–ì–æ–ª–æ—Å –±—Ä–µ–Ω–¥–∞</Label>
                  <Textarea
                    placeholder="–û–ø–∏—à–∏—Ç–µ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞..."
                    value={contentSettings.brandVoice}
                    onChange={(e) => setContentSettings((prev) => ({ ...prev, brandVoice: e.target.value }))}
                    className={`bg-slate-700 border-slate-600 text-white h-16 ${COMPACT_STYLES.smallTextSize} w-full`}
                  />
                </div>
              </div>

              <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                <h3 className={`text-white font-medium ${COMPACT_STYLES.smallTextSize}`}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò</h3>
                <div className={`${COMPACT_STYLES.itemGap} w-full`}>
                  <div className="flex items-center justify-between">
                    <span className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</span>
                    <Switch defaultChecked className="scale-75" />
                  </div>
                  <div className="flex items-center justify-between">
                    <span className={`text-slate-300 ${COMPACT_STYLES.smallTextSize}`}>–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–∞–≥–∏–∞—Ç</span>
                    <Switch defaultChecked className="scale-75" />
                  </div>
                </div>
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </StandardCard>
    </div>
  )
}
